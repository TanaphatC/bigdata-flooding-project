{"paragraphs":[{"title":"1.1) Hourly rainfall rate dataset importing from HUE","text":"Year%pyspark\r\nhourlyData = spark.read.csv(\"/user/zeppelin/flooding_data/rainfall_hourly_data2.csv\", header=True, inferSchema=True)","user":"anonymous","dateUpdated":"2020-11-07T06:34:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=369","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=370"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1602925411281_1573475665","id":"20201017-090331_940034940","dateCreated":"2020-10-17T09:03:31+0000","dateStarted":"2020-11-07T06:03:22+0000","dateFinished":"2020-11-07T06:03:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:26618"},{"title":"1.2) Hourly water level rate dataset importing from HUE","text":"%pyspark\nfrom pyspark.sql.functions import lit\n\nwaterLevelBKK001DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK001.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK001\"))\nwaterLevelBKK003DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK003.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK003\"))\nwaterLevelBKK004DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK004.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK004\"))\nwaterLevelBKK005DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK005.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK005\"))\nwaterLevelBKK008DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK008.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK008\"))\nwaterLevelBKK009DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK009.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK009\"))\nwaterLevelBKK020DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK020.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK020\"))\nwaterLevelBKK021DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_BKK021.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"BKK021\"))\nwaterLevelCPY015DF = spark.read.csv(\"/user/zeppelin/flooding_data/water_level_station_CPY015.csv\", header=True, inferSchema=True).withColumn(\"station\", lit(\"CPY015\"))","user":"anonymous","dateUpdated":"2020-11-07T06:03:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=371","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=372","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=373","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=374","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=375","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=376","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=377","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=378","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=379","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=380","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=381","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=382","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=383","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=384","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=385","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=386","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=387","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=388"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604220295277_774090316","id":"20201101-084455_903609208","dateCreated":"2020-11-01T08:44:55+0000","dateStarted":"2020-11-07T06:03:25+0000","dateFinished":"2020-11-07T06:03:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26619"},{"title":"2.1) Data Preprocessing - Filter only Bangkok","text":"%pyspark\n#filter only \"Bangkok\" province and assign to valiable 'bangkokHourlyData'\nbangkokHourlyData = hourlyData.filter(hourlyData['province_name_en']==\"Bangkok\").select(hourlyData['province_name_en'], hourlyData['district'], hourlyData['sub_district'], hourlyData['date'],  hourlyData['H01'], hourlyData['H02'], hourlyData['H03'], hourlyData['H04'], hourlyData['H05'], hourlyData['H06'], hourlyData['H07'], hourlyData['H08'], hourlyData['H09'], hourlyData['H10'], hourlyData['H11'], hourlyData['H12'], hourlyData['H13'], hourlyData['H14'], hourlyData['H15'], hourlyData['H16'], hourlyData['H17'], hourlyData['H18'], hourlyData['H19'], hourlyData['H20'], hourlyData['H21'], hourlyData['H22'], hourlyData['H23'], hourlyData['H24'])\n","user":"anonymous","dateUpdated":"2020-11-07T06:03:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"province_name_en","visible":true,"width":"*","sort":{"direction":"asc","priority":0},"filters":[{}],"pinned":""},{"name":"district","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"sub_district","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"date","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H01","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H02","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H03","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H04","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H05","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H06","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H07","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H08","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H09","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H10","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H11","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H12","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H13","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H14","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H15","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H16","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H17","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H18","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H19","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H20","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H21","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H22","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H23","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"H24","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[{"field":"province_name_en","groupPriority":0,"colName":"province_name_en"}],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"province_name_en":"string","district":"string","sub_district":"string","date":"string","H01":"string","H02":"string","H03":"string","H04":"string","H05":"string","H06":"string","H07":"string","H08":"string","H09":"string","H10":"string","H11":"string","H12":"string","H13":"string","H14":"string","H15":"string","H16":"string","H17":"string","H18":"string","H19":"string","H20":"string","H21":"string","H22":"string","H23":"string","H24":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"province_name_en":"string","district":"string","sub_district":"string","date":"string","H01":"string","H02":"string","H03":"string","H04":"string","H05":"string","H06":"string","H07":"string","H08":"string","H09":"string","H10":"string","H11":"string","H12":"string","H13":"string","H14":"string","H15":"string","H16":"string","H17":"string","H18":"string","H19":"string","H20":"string","H21":"string","H22":"string","H23":"string","H24":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1602925420895_-1295208824","id":"20201017-090340_1507830950","dateCreated":"2020-10-17T09:03:40+0000","dateStarted":"2020-11-07T06:03:45+0000","dateFinished":"2020-11-07T06:03:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26620"},{"title":"2.2) Missing Value (Statistical value of known data): calculate average rainy rate of each that day","text":"%pyspark\n#calculate the number of rainy hours on that day. (rainy hour = 24 - dry hour)\nimport datetime\n\nrainyHourArray = []\n\nclass RainyHour:\n    \n    def __init__(self, district, subDistrict, date, totalRainyHour, summaryRainyRate):\n        self.key = str(abs(hash(district+subDistrict)))\n        self.location = str(district + \"/\" + subDistrict)\n        self.day = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().day)\n        self.month = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().month)\n        self.year = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().year)\n        self.totalRainyHour = totalRainyHour\n        self.summaryRainyRate = summaryRainyRate\n        self.averageRainyRate = self.calAvg()\n    \n    def info(self):\n        return (self.key, self.location, self.day, self.month, self.year, self.totalRainyHour, self.summaryRainyRate, self.averageRainyRate)\n    \n    def calAvg(self):\n        if self.totalRainyHour!=0 and self.summaryRainyRate>0.0: \n            return round(self.summaryRainyRate / self.totalRainyHour, 2)\n        else:\n            return 0\n\ndef calculateRainyHour(row):\n    rainyHour=24\n    summaryRainyRate = 0.0\n    \n    for i in range(1, 25):\n        colName= \"H0\"+str(i) if i<=9 else \"H\"+str(i)\n        \n        if row[colName]!=\"NULL\" and float(row[colName])==0.0:\n            rainyHour-=1\n\n        if row[colName]!=\"NULL\" : summaryRainyRate+=float(row[colName])\n            \n    return RainyHour(row['district'], row['sub_district'], row['date'], rainyHour, summaryRainyRate)\n\n\nfor row in bangkokHourlyData.rdd.collect():\n    r = calculateRainyHour(row)\n    rainyHourArray.append(r.info())\n\ndef getAvgRainyRateByLocationAndDate(district, subDistrict, date):\n    row = 0.0\n    keyIn = str(abs(hash(district+subDistrict)))\n    dayIn = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().day)\n    monthIn = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().month)\n    yearIn = str(datetime.datetime.strptime(date, \"%d/%m/%Y\").date().year)\n    \n    for r in rainyHourArray:\n        if r[0]==keyIn and r[2]==dayIn and r[3]==monthIn and r[4]==yearIn:\n            row =  r[7]\n    \n    return row\n    ","user":"anonymous","dateUpdated":"2020-11-07T06:03:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{"columns":[{"name":"Key","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Location","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Date","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"NumberOfRainyHour","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Key":"string","Location":"string","Date":"string","NumberOfRainyHour":"number"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"scatterChart":{"yAxis":{"name":"NumberOfRainyHour","index":3,"aggr":"sum"},"size":{"name":"Location","index":1,"aggr":"sum"},"xAxis":{"name":"Location","index":1,"aggr":"sum"}},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Key","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"Location","index":1,"aggr":"sum"}]},"helium":{}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"Key","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Location","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Date","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"NumberOfRainyHour","visible":true,"width":"*","sort":{"priority":0,"direction":"asc"},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Key":"string","Location":"string","Date":"string","NumberOfRainyHour":"number"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Key","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"Location","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=389"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603029858134_-1147608560","id":"20201018-140418_1176902503","dateCreated":"2020-10-18T14:04:18+0000","dateStarted":"2020-11-07T06:03:45+0000","dateFinished":"2020-11-07T06:03:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26621"},{"title":"2.3) Missing value (Statistical value of known data) - Replace NULL with average rainy rate of each that day","text":"%pyspark\ndef replaceNullWithAvg(row):\n    avgRainyRate = getAvgRainyRateByLocationAndDate(row['district'], row['sub_district'], row['date'])\n    return (\n        float(avgRainyRate if row['H01']==\"NULL\" else row['H01']),\n        float(avgRainyRate if row['H02']==\"NULL\" else row['H02']),\n        float(avgRainyRate if row['H03']==\"NULL\" else row['H03']),\n        float(avgRainyRate if row['H04']==\"NULL\" else row['H04']),\n        float(avgRainyRate if row['H05']==\"NULL\" else row['H05']),\n        float(avgRainyRate if row['H06']==\"NULL\" else row['H06']),\n        float(avgRainyRate if row['H07']==\"NULL\" else row['H07']),\n        float(avgRainyRate if row['H08']==\"NULL\" else row['H08']),\n        float(avgRainyRate if row['H09']==\"NULL\" else row['H09']),\n        float(avgRainyRate if row['H10']==\"NULL\" else row['H10']),\n        float(avgRainyRate if row['H11']==\"NULL\" else row['H11']),\n        float(avgRainyRate if row['H12']==\"NULL\" else row['H12']),\n        float(avgRainyRate if row['H13']==\"NULL\" else row['H13']),\n        float(avgRainyRate if row['H14']==\"NULL\" else row['H14']),\n        float(avgRainyRate if row['H15']==\"NULL\" else row['H15']),\n        float(avgRainyRate if row['H16']==\"NULL\" else row['H16']),\n        float(avgRainyRate if row['H17']==\"NULL\" else row['H17']),\n        float(avgRainyRate if row['H18']==\"NULL\" else row['H18']),\n        float(avgRainyRate if row['H19']==\"NULL\" else row['H19']),\n        float(avgRainyRate if row['H20']==\"NULL\" else row['H20']),\n        float(avgRainyRate if row['H21']==\"NULL\" else row['H21']),\n        float(avgRainyRate if row['H22']==\"NULL\" else row['H22']),\n        float(avgRainyRate if row['H23']==\"NULL\" else row['H23']),\n        float(avgRainyRate if row['H24']==\"NULL\" else row['H24'])\n    )\n\ndef extract(row):\n    rowDate = row['date']\n    day = str(datetime.datetime.strptime(rowDate, \"%d/%m/%Y\").date().day)\n    month = str(datetime.datetime.strptime(rowDate, \"%d/%m/%Y\").date().month)\n    year = str(datetime.datetime.strptime(rowDate, \"%d/%m/%Y\").date().year)\n    \n    return (\n        row['district'] + \"/\" + row['sub_district'], day, month, year, replaceNullWithAvg(row)\n    )\n\n\ncleanDF=bangkokHourlyData.rdd.map(extract).toDF(['Location','Day','Month', 'Year', 'RainyRates'])\n","user":"anonymous","dateUpdated":"2020-11-07T06:03:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{"columns":[{"name":"Location","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Day","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Month","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Year","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"RainyHours","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Location":"string","Day":"string","Month":"string","Year":"string","RainyHours":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"scatterChart":{"xAxis":{"name":"Location","index":0,"aggr":"sum"}}},"keys":[{"name":"Location","index":0,"aggr":"sum"}],"groups":[{"name":"Month","index":2,"aggr":"sum"}],"values":[{"name":"RainyHours","index":4,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=390"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603523563777_1375166502","id":"20201024-071243_435153083","dateCreated":"2020-10-24T07:12:43+0000","dateStarted":"2020-11-07T06:03:47+0000","dateFinished":"2020-11-07T06:03:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26622"},{"title":"2.4) Missing value - Check rainy rate since 01:00 till 24:00 should not be NULL","text":"%pyspark\nfor row in cleanDF.rdd.collect():\n    hourRow = row['RainyRates']\n    for i in range(0, 23):\n        assert \"True\" == str((hourRow[i] != \"NULL\"))","user":"anonymous","dateUpdated":"2020-11-07T06:03:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=391"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603611944566_-1555939565","id":"20201025-074544_914445690","dateCreated":"2020-10-25T07:45:44+0000","dateStarted":"2020-11-07T06:03:49+0000","dateFinished":"2020-11-07T06:03:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26623"},{"title":"2.5) Preprocessing - Extract calendar column to day, month, year column on water-level dataset","text":"%pyspark\nimport datetime\nfrom pyspark.sql import Row\n\nmonthsArray = [\"none\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\ndef extract(row):\n    rowDate = str(row['date'])[:10]\n    day = str(datetime.datetime.strptime(rowDate, \"%Y-%m-%d\").date().day)\n    month = int(datetime.datetime.strptime(rowDate, \"%Y-%m-%d\").date().month)\n    year = str(datetime.datetime.strptime(rowDate, \"%Y-%m-%d\").date().year)\n    \n    return (\n        row['station'], day, month, monthsArray[(month)], year, row['time'], float(row['water_lv'])\n    )\n   \nwaterLevelBKK001ExtractDF = waterLevelBKK001DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK003ExtractDF = waterLevelBKK003DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK004ExtractDF = waterLevelBKK004DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK005ExtractDF = waterLevelBKK005DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK008ExtractDF = waterLevelBKK008DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK009ExtractDF = waterLevelBKK009DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK020ExtractDF = waterLevelBKK020DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelBKK021ExtractDF = waterLevelBKK021DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])\nwaterLevelCPY015ExtractDF = waterLevelCPY015DF.rdd.map(extract).toDF(['Station', 'Day','Month', 'MonthName','Year', 'Time', 'WaterLavel'])","user":"anonymous","dateUpdated":"2020-11-07T06:03:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=392","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=393","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=394","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=395","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=396","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=397","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=398","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=399","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=400"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604223467973_563099537","id":"20201101-093747_766830479","dateCreated":"2020-11-01T09:37:47+0000","dateStarted":"2020-11-07T06:03:51+0000","dateFinished":"2020-11-07T06:03:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26624"},{"title":"2.6) Cleansing Data - Replease abnormal value -999 of water-level","text":"%pyspark\nfrom pyspark.sql import Row\n\ndef replaseAbnormalWaterLevel(row):\n    waterLv = row['WaterLavel'] \n    if float(row['WaterLavel'])==float(-999):\n        waterLv = 0.0\n    return (\n        row['Station'], row['Day'], row['Month'] ,row['MonthName'], row['Year'], row['Time'], waterLv\n    )\n\nwaterLevelBKK001CleanDF = waterLevelBKK001ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station', 'Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK003CleanDF = waterLevelBKK003ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK004CleanDF = waterLevelBKK004ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK005CleanDF = waterLevelBKK005ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK008CleanDF = waterLevelBKK008ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK009CleanDF = waterLevelBKK009ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK020CleanDF = waterLevelBKK020ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelBKK021CleanDF = waterLevelBKK021ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\nwaterLevelCPY015CleanDF = waterLevelCPY015ExtractDF.rdd.map(replaseAbnormalWaterLevel).toDF(['Station','Day','Month', 'MonthName', 'Year', 'Time', 'WaterLavel'])\n","user":"anonymous","dateUpdated":"2020-11-07T06:03:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Day":"string","Month":"string","MonthName":"string","Year":"string","Time":"string","WaterLavel":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=401","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=402","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=403","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=404","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=405","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=406","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=407","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=408","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=409"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604658398055_1755192589","id":"20201106-102638_1559502730","dateCreated":"2020-11-06T10:26:38+0000","dateStarted":"2020-11-07T06:03:53+0000","dateFinished":"2020-11-07T06:03:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26625"},{"title":"3.1) Mapping - Finding summary and average rainy rate each that day","text":"%pyspark\n\nmonthsArray = [\"none\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\ndef summaryRainyRate(row):\n    summaryRate = 0.0\n    hourRow = row['RainyRates']\n    result = [row['Location'], row['Day'], str(row['Month']), monthsArray[int(row['Month'])], row['Year'], row['RainyRates'], ]\n    for i in range(0, 23):\n        summaryRate+=hourRow[i]\n    result.append(round(float(summaryRate), 2))\n    return result\n    \nsummaryDF = cleanDF.rdd.map(summaryRainyRate).toDF([\"Location\",\"Day\", \"MonthNo\", \"MonthName\" ,\"Year\",\"RainyRate\", \"DayRainyRate\"]).sort('DayRainyRate', ascending=False)\nsummaryDF.show()\n","user":"anonymous","dateUpdated":"2020-11-07T06:03:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Location":"string","Day":"string","Month":"string","Year":"string","RainyRate":"string","SummaryRainyRate":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+---+-------+---------+----+--------------------+------------+\n|            Location|Day|MonthNo|MonthName|Year|           RainyRate|DayRainyRate|\n+--------------------+---+-------+---------+----+--------------------+------------+\n|Khlong Sam Wa/Sam...|  1|      5|      May|2014|[0.0, 0.0, 2.13, ...|      113.21|\n|Nong Chok/Krathum...|  8|      5|      May|2014|[0.0, 0.0, 0.0, 3...|       61.06|\n|Lak Si/Thung Song...|  8|      5|      May|2014|[0.0, 4.54, 3.95,...|       58.82|\n| Bang Khen/Tha Raeng|  8|      5|      May|2014|[0.0, 0.0, 4.4, 2...|       58.12|\n| Bang Khen/Tha Raeng|  1|      5|      May|2014|[0.0, 0.0, 1.14, ...|       56.15|\n|Bang Khun Thian/S...|  1|      5|      May|2014|[0.0, 0.0, 4.67, ...|       56.01|\n|Lat Krabang/Lam P...|  1|      5|      May|2014|[0.0, 0.0, 0.0, 3...|       55.55|\n|Nong Chok/Khu Fan...|  8|      5|      May|2014|[0.0, 0.0, 0.0, 3...|       53.81|\n|   Bang Bon/Bang Bon|  8|      5|      May|2014|[3.34, 0.1, 0.72,...|       52.82|\n|     Prawet/Nong Bon|  8|      5|      May|2014|[3.88, 2.26, 4.72...|       52.53|\n|Bang Khun Thian/T...|  1|      5|      May|2014|[0.0, 0.0, 0.0, 2...|       51.51|\n|Phaya Thai/Sam Se...|  1|      5|      May|2014|[0.0, 0.0, 0.0, 4...|       51.07|\n|Khlong Sam Wa/Sam...|  8|      5|      May|2014|[0.0, 2.19, 0.61,...|        50.6|\n|Lak Si/Thung Song...|  1|      5|      May|2014|[0.0, 0.0, 0.28, ...|       49.84|\n|Khlong Toei/Khlon...| 28|      7|     July|2014|[0.0, 0.0, 0.0, 0...|        49.5|\n|Nong Chok/Krathum...|  1|      5|      May|2014|[0.0, 0.0, 0.0, 0...|       46.65|\n|   Bang Bon/Bang Bon|  1|      5|      May|2014|[0.0, 0.0, 4.17, ...|       42.91|\n|Khlong Toei/Khlon...| 22|      3|    March|2014|[0.0, 0.0, 0.0, 0...|        41.8|\n|Bang Khun Thian/S...|  8|      5|      May|2014|[0.0, 0.0, 0.0, 0...|       40.79|\n|Khlong Sam Wa/Sam...|  1|      5|      May|2014|[0.0, 0.0, 0.0, 1...|       40.65|\n+--------------------+---+-------+---------+----+--------------------+------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=410","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=411"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603622037681_330666540","id":"20201025-103357_826461112","dateCreated":"2020-10-25T10:33:57+0000","dateStarted":"2020-11-07T06:03:58+0000","dateFinished":"2020-11-07T06:04:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26626"},{"title":"4.1) Reduce - Summary rainy rate by month and year","text":"%pyspark\ngroupByMYDF = summaryDF.groupBy([\"Location\", \"MonthName\", \"MonthNo\", \"Year\"]).sum(\"DayRainyRate\")\nz.show(groupByMYDF)","user":"anonymous","dateUpdated":"2020-11-07T06:04:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"scatterChart","height":492,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Location":"string","MonthName":"string","MonthNo":"string","Year":"string","sum(DayRainyRate)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"scatterChart":{"xAxis":{"name":"MonthNo","index":2,"aggr":"sum"},"group":{"name":"Location","index":0,"aggr":"sum"},"yAxis":{"name":"sum(DayRainyRate)","index":4,"aggr":"sum"},"size":{"name":"sum(DayRainyRate)","index":4,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate","style":"stack"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate","isDateFormat":false,"lineWithFocus":false,"forceY":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate","stacked":true},"pieChart":{}},"keys":[{"name":"Location","index":0,"aggr":"sum"}],"groups":[{"name":"MonthNo","index":2,"aggr":"sum"},{"name":"MonthName","index":1,"aggr":"sum"}],"values":[{"name":"sum(DayRainyRate)","index":4,"aggr":"sum"}],"commonSetting":{}},"helium":{}},"1":{"graph":{"mode":"table","height":93,"optionOpen":false}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Location\tMonthName\tMonthNo\tYear\tsum(DayRainyRate)\nKhlong Sam Wa/Sam Wa Tawan Ok\tApril\t4\t2014\t5.3500000000000005\nNong Chok/Khu Fang Nuea\tApril\t4\t2014\t16.330000000000002\nKhlong Toei/Khlong Toei\tMarch\t3\t2014\t47.9\nHuai Khwang/Bang Kapi\tFebruary\t2\t2014\t20.73\nLat Krabang/Khum Thong\tFebruary\t2\t2014\t12.020000000000001\nDon Mueang/Sanam Bin\tApril\t4\t2014\t9.47\nPhaya Thai/Sam Sen Nai\tFebruary\t2\t2014\t11.930000000000001\nBang Khun Thian/Tha Kham\tFebruary\t2\t2014\t16.220000000000002\nNong Chok/Khlong Sip Song\tFebruary\t2\t2014\t16.79\nBang Khen/Tha Raeng\tMay\t5\t2014\t187.85\nNong Chok/Khu Fang Nuea\tJanuary\t1\t2014\t0.99\nLat Phrao/Lat Phrao\tFebruary\t2\t2014\t3.64\nLak Si/Thung Song Hong\tMarch\t3\t2014\t2.6799999999999997\nBang Khun Thian/Samae Dam\tJanuary\t1\t2014\t30.98\nKhlong Toei/Khlong Toei\tAugust\t8\t2014\t16.15\nKhlong Sam Wa/Sam Wa Tawan Tok\tMarch\t3\t2014\t20.49\nLat Krabang/Khlong Sam Prawet\tApril\t4\t2014\t6.6\nMin Buri/Saen Saep\tApril\t4\t2014\t21.720000000000002\nLak Si/Thung Song Hong\tMay\t5\t2014\t108.66\nKhlong Toei/Khlong Toei\tMay\t5\t2014\t54.6\nLat Krabang/Khlong Sam Prawet\tJanuary\t1\t2014\t16.009999999999998\nBang Khen/Tha Raeng\tMarch\t3\t2014\t26.95\nLat Krabang/Lam Pla Thio\tApril\t4\t2014\t13.38\nBang Bon/Bang Bon\tApril\t4\t2014\t8.02\nLat Phrao/Lat Phrao\tJanuary\t1\t2014\t6.890000000000001\nLat Krabang/Khum Thong\tMarch\t3\t2014\t4.08\nNong Chok/Khu Fang Nuea\tFebruary\t2\t2014\t3.2199999999999998\nBueng Kum/Khlong Kum\tApril\t4\t2014\t0.0\nLat Phrao/Lat Phrao\tApril\t4\t2014\t12.929999999999998\nDon Mueang/Sanam Bin\tMarch\t3\t2014\t13.91\nKhlong Sam Wa/Sam Wa Tawan Tok\tJanuary\t1\t2014\t23.880000000000003\nBueng Kum/Khlong Kum\tJanuary\t1\t2014\t6.42\nLat Krabang/Khlong Sam Prawet\tMarch\t3\t2014\t14.89\nNong Chok/Lam Phak Chi\tMarch\t3\t2014\t34.99\nNong Chok/Khok Faet\tApril\t4\t2014\t9.77\nBang Khun Thian/Tha Kham\tMay\t5\t2014\t91.07\nPrawet/Nong Bon\tMarch\t3\t2014\t15.280000000000001\nLat Krabang/Lam Pla Thio\tMay\t5\t2014\t100.02999999999999\nSaphan Sung/Saphan Sung\tApril\t4\t2014\t19.36\nLak Si/Thung Song Hong\tJanuary\t1\t2014\t0.0\nMin Buri/Saen Saep\tMarch\t3\t2014\t7.08\nLat Krabang/Khlong Sam Prawet\tMay\t5\t2014\t0.0\nBang Khae/Bang Phai\tMay\t5\t2014\t73.0\nNong Chok/Lam Phak Chi\tApril\t4\t2014\t14.37\nNong Chok/Krathum Rai\tMay\t5\t2014\t107.71000000000001\nLat Phrao/Lat Phrao\tMarch\t3\t2014\t5.359999999999999\nNong Chok/Khu Fang Nuea\tMarch\t3\t2014\t50.92999999999999\nDon Mueang/Sanam Bin\tJanuary\t1\t2014\t0.0\nNong Chok/Khlong Sip Song\tMay\t5\t2014\t35.91\nNong Chok/Lam Phak Chi\tJanuary\t1\t2014\t8.690000000000001\nNong Chok/Lam Phak Chi\tMay\t5\t2014\t0.0\nBang Bon/Bang Bon\tMarch\t3\t2014\t11.5\nKhlong Toei/Khlong Toei\tJune\t6\t2014\t74.73\nKhlong Sam Wa/Sam Wa Tawan Ok\tMay\t5\t2014\t151.48\nLat Krabang/Khlong Sam Prawet\tFebruary\t2\t2014\t22.789999999999996\nNong Chok/Krathum Rai\tFebruary\t2\t2014\t3.2800000000000002\nKhlong Sam Wa/Sam Wa Tawan Ok\tJanuary\t1\t2014\t1.25\nBang Khae/Bang Phai\tJanuary\t1\t2014\t10.29\nHuai Khwang/Bang Kapi\tApril\t4\t2014\t6.710000000000001\nBang Khae/Bang Phai\tMarch\t3\t2014\t12.530000000000001\nBang Bon/Bang Bon\tMay\t5\t2014\t95.72999999999999\nNong Chok/Khok Faet\tMarch\t3\t2014\t11.389999999999999\nLat Phrao/Lat Phrao\tMay\t5\t2014\t40.739999999999995\nHuai Khwang/Bang Kapi\tMay\t5\t2014\t14.3\nNong Chok/Khok Faet\tJanuary\t1\t2014\t0.8600000000000001\nLat Krabang/Khum Thong\tMay\t5\t2014\t59.660000000000004\nBang Khun Thian/Tha Kham\tApril\t4\t2014\t4.58\nSaphan Sung/Saphan Sung\tFebruary\t2\t2014\t17.349999999999998\nPhaya Thai/Sam Sen Nai\tMarch\t3\t2014\t13.01\nBang Khun Thian/Tha Kham\tJanuary\t1\t2014\t24.099999999999998\nBang Khae/Bang Phai\tApril\t4\t2014\t4.41\nNong Chok/Khok Faet\tFebruary\t2\t2014\t16.52\nKhlong Toei/Khlong Toei\tFebruary\t2\t2014\t2.8\nKhlong Sam Wa/Sam Wa Tawan Tok\tMay\t5\t2014\t91.25\nHuai Khwang/Bang Kapi\tJanuary\t1\t2014\t3.6999999999999997\nLat Krabang/Lam Pla Thio\tMarch\t3\t2014\t24.38\nBueng Kum/Khlong Kum\tMarch\t3\t2014\t12.540000000000001\nNong Chok/Krathum Rai\tApril\t4\t2014\t12.76\nPhaya Thai/Sam Sen Nai\tJanuary\t1\t2014\t11.120000000000001\nKhlong Sam Wa/Sam Wa Tawan Tok\tApril\t4\t2014\t5.64\nHuai Khwang/Bang Kapi\tMarch\t3\t2014\t28.910000000000004\nBueng Kum/Khlong Kum\tFebruary\t2\t2014\t11.6\nBang Khen/Tha Raeng\tApril\t4\t2014\t10.050000000000002\nKhlong Toei/Khlong Toei\tApril\t4\t2014\t1.3\nPrawet/Nong Bon\tApril\t4\t2014\t14.629999999999997\nNong Chok/Khlong Sip Song\tJanuary\t1\t2014\t10.64\nKhlong Toei/Khlong Toei\tDecember\t12\t2014\t0.0\nBang Khun Thian/Samae Dam\tMay\t5\t2014\t96.8\nBueng Kum/Khlong Kum\tMay\t5\t2014\t18.6\nKhlong Sam Wa/Sam Wa Tawan Tok\tFebruary\t2\t2014\t15.44\nPhaya Thai/Sam Sen Nai\tApril\t4\t2014\t7.359999999999999\nBang Khae/Bang Phai\tFebruary\t2\t2014\t5.59\nNong Chok/Krathum Rai\tJanuary\t1\t2014\t15.510000000000002\nPhaya Thai/Sam Sen Nai\tMay\t5\t2014\t53.0\nLat Krabang/Lam Pla Thio\tJanuary\t1\t2014\t30.92\nSaphan Sung/Saphan Sung\tJanuary\t1\t2014\t21.86\nBang Bon/Bang Bon\tJanuary\t1\t2014\t9.57\nMin Buri/Saen Saep\tJanuary\t1\t2014\t8.17\nNong Chok/Khlong Sip Song\tMarch\t3\t2014\t12.41\nLat Krabang/Khum Thong\tJanuary\t1\t2014\t12.3\nBang Khun Thian/Samae Dam\tMarch\t3\t2014\t23.66\nLat Krabang/Lam Pla Thio\tFebruary\t2\t2014\t31.970000000000002\nMin Buri/Saen Saep\tFebruary\t2\t2014\t20.33\nBang Khen/Tha Raeng\tFebruary\t2\t2014\t5.16\nBang Khun Thian/Tha Kham\tMarch\t3\t2014\t5.92\nPrawet/Nong Bon\tFebruary\t2\t2014\t20.0\nKhlong Sam Wa/Sam Wa Tawan Ok\tMarch\t3\t2014\t16.88\nNong Chok/Khlong Sip Song\tApril\t4\t2014\t14.66\nKhlong Toei/Khlong Toei\tJanuary\t1\t2014\t0.0\nNong Chok/Lam Phak Chi\tFebruary\t2\t2014\t18.560000000000002\nMin Buri/Saen Saep\tMay\t5\t2014\t33.45\nNong Chok/Khok Faet\tMay\t5\t2014\t0.83\nBang Khen/Tha Raeng\tJanuary\t1\t2014\t1.89\nNong Chok/Krathum Rai\tMarch\t3\t2014\t2.25\nKhlong Toei/Khlong Toei\tNovember\t11\t2014\t57.580000000000005\nSaphan Sung/Saphan Sung\tMay\t5\t2014\t40.63\nLat Krabang/Khum Thong\tApril\t4\t2014\t8.02\nSaphan Sung/Saphan Sung\tMarch\t3\t2014\t21.35\nPrawet/Nong Bon\tMay\t5\t2014\t80.8\nDon Mueang/Sanam Bin\tFebruary\t2\t2014\t0.0\nLak Si/Thung Song Hong\tApril\t4\t2014\t1.91\nKhlong Toei/Khlong Toei\tJuly\t7\t2014\t164.16\nBang Khun Thian/Samae Dam\tFebruary\t2\t2014\t18.759999999999998\nKhlong Sam Wa/Sam Wa Tawan Ok\tFebruary\t2\t2014\t15.720000000000002\nBang Khun Thian/Samae Dam\tApril\t4\t2014\t21.430000000000003\nNong Chok/Khu Fang Nuea\tMay\t5\t2014\t84.03\nBang Bon/Bang Bon\tFebruary\t2\t2014\t36.190000000000005\nLak Si/Thung Song Hong\tFebruary\t2\t2014\t12.719999999999999\nDon Mueang/Sanam Bin\tMay\t5\t2014\t13.2\nPrawet/Nong Bon\tJanuary\t1\t2014\t1.49\n"},{"type":"TEXT","data":"\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=412","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=413","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=414","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=415","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=416","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=417"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603624634837_-122743207","id":"20201025-111714_732506377","dateCreated":"2020-10-25T11:17:14+0000","dateStarted":"2020-11-07T06:04:01+0000","dateFinished":"2020-11-07T06:04:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26627"},{"title":"4.2) Reduce - Find average of water-level dataset from 9 stations and union them all to one finally dataset.","text":"%pyspark\ndef reduceCleanWaterLevelData(waterlvDF):\n    return waterlvDF.filter(waterlvDF['Year']==\"2014\").groupBy([\"Station\"]).pivot(\"Month\").mean(\"WaterLavel\")\n\nwaterLevelBKK001SummaryDF = reduceCleanWaterLevelData(waterLevelBKK001CleanDF)\nwaterLevelBKK003SummaryDF = reduceCleanWaterLevelData(waterLevelBKK003CleanDF)\nwaterLevelBKK004SummaryDF = reduceCleanWaterLevelData(waterLevelBKK004CleanDF)\nwaterLevelBKK005SummaryDF = reduceCleanWaterLevelData(waterLevelBKK005CleanDF)\nwaterLevelBKK008SummaryDF = reduceCleanWaterLevelData(waterLevelBKK008CleanDF)\nwaterLevelBKK009SummaryDF = reduceCleanWaterLevelData(waterLevelBKK009CleanDF)\nwaterLevelBKK020SummaryDF = reduceCleanWaterLevelData(waterLevelBKK020CleanDF)\nwaterLevelBKK021SummaryDF = reduceCleanWaterLevelData(waterLevelBKK021CleanDF)\nwaterLevelCPY015SummaryDF = reduceCleanWaterLevelData(waterLevelCPY015CleanDF)\n\nwaterLevelFinalDF = waterLevelBKK001SummaryDF.union(waterLevelBKK003SummaryDF).union(waterLevelBKK004SummaryDF).union(waterLevelBKK005SummaryDF).union(waterLevelBKK008SummaryDF).union(waterLevelBKK009SummaryDF).union(waterLevelBKK020SummaryDF).union(waterLevelBKK021SummaryDF).union(waterLevelCPY015SummaryDF)\nz.show(waterLevelFinalDF)","user":"anonymous","dateUpdated":"2020-11-07T07:16:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":true},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"1":"string","2":"string","3":"string","4":"string","5":"string","6":"string","7":"string","8":"string","9":"string","10":"string","11":"string","12":"string","Station":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{},"keys":[{"name":"Station","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"1","index":1,"aggr":"avg"},{"name":"2","index":2,"aggr":"avg"},{"name":"3","index":3,"aggr":"avg"},{"name":"4","index":4,"aggr":"avg"},{"name":"5","index":5,"aggr":"avg"},{"name":"6","index":6,"aggr":"avg"},{"name":"7","index":7,"aggr":"avg"},{"name":"8","index":8,"aggr":"avg"},{"name":"9","index":9,"aggr":"avg"},{"name":"10","index":10,"aggr":"avg"},{"name":"11","index":11,"aggr":"avg"},{"name":"12","index":12,"aggr":"avg"}]},"helium":{}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Station\t1\t2\t3\t4\t5\t6\t7\t8\t9\t10\t11\t12\nBKK001\t-0.033736559139785224\t-0.09489087301587266\t-0.06718189964157614\t-0.12100231481481337\t-0.1000560035842293\t-4.8611111111091827E-4\t0.07310483870967739\t0.2859005376344111\t0.49686342592591376\t0.46486783154121986\t0.07017824074074075\t0.08315188172043125\nBKK003\t0.7388037634408569\t0.7790749007936503\t0.8023745519713245\t0.6482222222222206\t0.5563821684587792\t0.39351157407407356\t0.3970855734767018\t0.46962813620071625\t0.6223101851851877\t0.6377732974910395\t0.7570879629629607\t0.4248835125448032\nBKK004\t0.5165412186379946\t0.5463070436507858\t0.5184923835125449\t0.4258680555555585\t0.3643862007168473\t0.23389120370370334\t0.0\t0.0\t0.0845694444444443\t0.6328785842293879\t0.7187546296296261\t0.5261738351254444\nBKK005\t0.25579749103942695\t0.2699975198412655\t0.254348118279568\t0.1880324074074083\t0.1551164874551973\t0.08342824074074058\t0.1159520609319\t0.1865591397849463\t0.23516203703703834\t0.3729614695340513\t0.3796574074074099\t0.2633534946236567\nBKK008\t0.05332213261648791\t0.02528025793650788\t0.004292114695340425\t-0.0976597222222221\t-0.17682347670251128\t-0.1258819444444445\t-0.12943324372759896\t-0.13806675627240164\t-0.21286805555555552\t-0.19073924731182917\t0.003629629629629544\t0.09369399641577128\nBKK009\t-0.39977374551971573\t-1.0581324404761863\t-0.7251344086021593\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0034791666666666703\t0.025757168458781527\t-0.0948240740740743\t-0.2865681003584185\nBKK020\t0.16056899641576852\t0.060473710317460946\t-0.05504256272401432\t-0.12927083333333156\t-0.08975134408602249\t0.12279629629629632\t0.2741218637992861\t0.7086469534050276\t1.0293634259259308\t0.9909094982078753\t0.7988217592592557\t0.32075716845877805\nBKK021\t1.0358602150537586\t0.9739360119047913\t0.9634744623655737\t0.8536180555555447\t0.8670743727598739\t0.910099537037004\t0.9367047491039292\t1.1518436379928396\t1.2116875000000127\t1.253073476702483\t1.2898981481481453\t1.1348476702509072\nCPY015\t0.45088037634408484\t0.4648685515873004\t0.4668525985663073\t0.32065972222222233\t0.24951612903225773\t0.15922222222222238\t0.13917786738351226\t0.22361111111111137\t0.3845185185185183\t0.44271057347670173\t0.3295949074074083\t0.4974843189964155\n"},{"type":"TEXT","data":"\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=418","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=419","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=420","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=421","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=422","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=423","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=424","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=425","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=426","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=427","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=428","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=429","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=430","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=431","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=432"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604121812257_1412141453","id":"20201031-052332_1465106584","dateCreated":"2020-10-31T05:23:32+0000","dateStarted":"2020-11-07T06:04:05+0000","dateFinished":"2020-11-07T06:08:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26628"},{"title":"5.1) Outlier Detection - Rainy Rate","text":"%pyspark\nimport pyspark.sql.functions as F\nfrom pyspark.sql.types import StringType\n\nsummaryDF = groupByMYDF.select(\"sum(DayRainyRate)\").summary(\"min\", \"max\", \"25%\", \"75%\", \"mean\", \"stddev\")\nmin = float(summaryDF.collect()[0][1])\nmax = float(summaryDF.collect()[1][1])\nq1 = float(summaryDF.collect()[2][1])\nq3 = float(summaryDF.collect()[3][1])\nmean = float(summaryDF.collect()[4][1])\nsd = float(summaryDF.collect()[5][1])\nsummaryDF.show()\n\niqr = q3-q1\nupperB = q3+(1.5*iqr)\nlowerB = q1-(1.5*iqr)\nprint \"IQR: {}\".format(iqr)\nprint \"Upper Bound: {} / Lower Bound: {}\".format(upperB, lowerB)\n\ndef checkBoundary(sumRate):\n    if sumRate > upperB: \n        return 'upper bound'\n    elif sumRate < lowerB:\n        return 'lower bound'\n    else :\n        return 'normal'\n\ncheckBoundaryFunc = F.udf(checkBoundary, StringType())\n\nOutlierDF = groupByMYDF.withColumn(\"Outlier\", checkBoundaryFunc(\"sum(DayRainyRate)\"))\nz.show(OutlierDF)","user":"anonymous","dateUpdated":"2020-11-07T06:08:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Location":"string","Average_SummaryDayRainyRate":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"Location","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""},{"name":"MonthName","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"MonthNo","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Year","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"sum(DayRainyRate)","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Outlier","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Location":"string","MonthName":"string","MonthNo":"string","Year":"string","sum(DayRainyRate)":"string","Outlier":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"scatterChart":{"xAxis":{"name":"Location","index":0,"aggr":"sum"},"yAxis":{"name":"Outlier","index":5,"aggr":"sum"},"group":{"name":"MonthName","index":1,"aggr":"sum"}},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"pieChart":{},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate"}},"keys":[{"name":"Location","index":0,"aggr":"sum"}],"groups":[{"name":"MonthName","index":1,"aggr":"sum"}],"values":[{"name":"Outlier","index":5,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+\n|summary| sum(DayRainyRate)|\n+-------+------------------+\n|    min|               0.0|\n|    max|            187.85|\n|    25%|              6.42|\n|    75%|24.099999999999998|\n|   mean| 25.03723076923076|\n| stddev|33.312369377038074|\n+-------+------------------+\n\nIQR: 17.68\nUpper Bound: 50.62 / Lower Bound: -20.1\n"},{"type":"TABLE","data":"Location\tMonthName\tMonthNo\tYear\tsum(DayRainyRate)\tOutlier\nKhlong Sam Wa/Sam Wa Tawan Ok\tApril\t4\t2014\t5.3500000000000005\tnormal\nNong Chok/Khu Fang Nuea\tApril\t4\t2014\t16.330000000000002\tnormal\nKhlong Toei/Khlong Toei\tMarch\t3\t2014\t47.9\tnormal\nHuai Khwang/Bang Kapi\tFebruary\t2\t2014\t20.73\tnormal\nLat Krabang/Khum Thong\tFebruary\t2\t2014\t12.020000000000001\tnormal\nDon Mueang/Sanam Bin\tApril\t4\t2014\t9.47\tnormal\nPhaya Thai/Sam Sen Nai\tFebruary\t2\t2014\t11.930000000000001\tnormal\nBang Khun Thian/Tha Kham\tFebruary\t2\t2014\t16.220000000000002\tnormal\nNong Chok/Khlong Sip Song\tFebruary\t2\t2014\t16.79\tnormal\nBang Khen/Tha Raeng\tMay\t5\t2014\t187.85\tupper bound\nNong Chok/Khu Fang Nuea\tJanuary\t1\t2014\t0.99\tnormal\nLat Phrao/Lat Phrao\tFebruary\t2\t2014\t3.64\tnormal\nLak Si/Thung Song Hong\tMarch\t3\t2014\t2.6799999999999997\tnormal\nBang Khun Thian/Samae Dam\tJanuary\t1\t2014\t30.98\tnormal\nKhlong Toei/Khlong Toei\tAugust\t8\t2014\t16.15\tnormal\nKhlong Sam Wa/Sam Wa Tawan Tok\tMarch\t3\t2014\t20.49\tnormal\nLat Krabang/Khlong Sam Prawet\tApril\t4\t2014\t6.6\tnormal\nMin Buri/Saen Saep\tApril\t4\t2014\t21.720000000000002\tnormal\nLak Si/Thung Song Hong\tMay\t5\t2014\t108.66\tupper bound\nKhlong Toei/Khlong Toei\tMay\t5\t2014\t54.6\tupper bound\nLat Krabang/Khlong Sam Prawet\tJanuary\t1\t2014\t16.009999999999998\tnormal\nBang Khen/Tha Raeng\tMarch\t3\t2014\t26.95\tnormal\nLat Krabang/Lam Pla Thio\tApril\t4\t2014\t13.38\tnormal\nBang Bon/Bang Bon\tApril\t4\t2014\t8.02\tnormal\nLat Phrao/Lat Phrao\tJanuary\t1\t2014\t6.890000000000001\tnormal\nLat Krabang/Khum Thong\tMarch\t3\t2014\t4.08\tnormal\nNong Chok/Khu Fang Nuea\tFebruary\t2\t2014\t3.2199999999999998\tnormal\nBueng Kum/Khlong Kum\tApril\t4\t2014\t0.0\tnormal\nLat Phrao/Lat Phrao\tApril\t4\t2014\t12.929999999999998\tnormal\nDon Mueang/Sanam Bin\tMarch\t3\t2014\t13.91\tnormal\nKhlong Sam Wa/Sam Wa Tawan Tok\tJanuary\t1\t2014\t23.880000000000003\tnormal\nBueng Kum/Khlong Kum\tJanuary\t1\t2014\t6.42\tnormal\nLat Krabang/Khlong Sam Prawet\tMarch\t3\t2014\t14.89\tnormal\nNong Chok/Lam Phak Chi\tMarch\t3\t2014\t34.99\tnormal\nNong Chok/Khok Faet\tApril\t4\t2014\t9.77\tnormal\nBang Khun Thian/Tha Kham\tMay\t5\t2014\t91.07\tupper bound\nPrawet/Nong Bon\tMarch\t3\t2014\t15.280000000000001\tnormal\nLat Krabang/Lam Pla Thio\tMay\t5\t2014\t100.02999999999999\tupper bound\nSaphan Sung/Saphan Sung\tApril\t4\t2014\t19.36\tnormal\nLak Si/Thung Song Hong\tJanuary\t1\t2014\t0.0\tnormal\nMin Buri/Saen Saep\tMarch\t3\t2014\t7.08\tnormal\nLat Krabang/Khlong Sam Prawet\tMay\t5\t2014\t0.0\tnormal\nBang Khae/Bang Phai\tMay\t5\t2014\t73.0\tupper bound\nNong Chok/Lam Phak Chi\tApril\t4\t2014\t14.37\tnormal\nNong Chok/Krathum Rai\tMay\t5\t2014\t107.71000000000001\tupper bound\nLat Phrao/Lat Phrao\tMarch\t3\t2014\t5.359999999999999\tnormal\nNong Chok/Khu Fang Nuea\tMarch\t3\t2014\t50.92999999999999\tupper bound\nDon Mueang/Sanam Bin\tJanuary\t1\t2014\t0.0\tnormal\nNong Chok/Khlong Sip Song\tMay\t5\t2014\t35.91\tnormal\nNong Chok/Lam Phak Chi\tJanuary\t1\t2014\t8.690000000000001\tnormal\nNong Chok/Lam Phak Chi\tMay\t5\t2014\t0.0\tnormal\nBang Bon/Bang Bon\tMarch\t3\t2014\t11.5\tnormal\nKhlong Toei/Khlong Toei\tJune\t6\t2014\t74.73\tupper bound\nKhlong Sam Wa/Sam Wa Tawan Ok\tMay\t5\t2014\t151.48\tupper bound\nLat Krabang/Khlong Sam Prawet\tFebruary\t2\t2014\t22.789999999999996\tnormal\nNong Chok/Krathum Rai\tFebruary\t2\t2014\t3.2800000000000002\tnormal\nKhlong Sam Wa/Sam Wa Tawan Ok\tJanuary\t1\t2014\t1.25\tnormal\nBang Khae/Bang Phai\tJanuary\t1\t2014\t10.29\tnormal\nHuai Khwang/Bang Kapi\tApril\t4\t2014\t6.710000000000001\tnormal\nBang Khae/Bang Phai\tMarch\t3\t2014\t12.530000000000001\tnormal\nBang Bon/Bang Bon\tMay\t5\t2014\t95.72999999999999\tupper bound\nNong Chok/Khok Faet\tMarch\t3\t2014\t11.389999999999999\tnormal\nLat Phrao/Lat Phrao\tMay\t5\t2014\t40.739999999999995\tnormal\nHuai Khwang/Bang Kapi\tMay\t5\t2014\t14.3\tnormal\nNong Chok/Khok Faet\tJanuary\t1\t2014\t0.8600000000000001\tnormal\nLat Krabang/Khum Thong\tMay\t5\t2014\t59.660000000000004\tupper bound\nBang Khun Thian/Tha Kham\tApril\t4\t2014\t4.58\tnormal\nSaphan Sung/Saphan Sung\tFebruary\t2\t2014\t17.349999999999998\tnormal\nPhaya Thai/Sam Sen Nai\tMarch\t3\t2014\t13.01\tnormal\nBang Khun Thian/Tha Kham\tJanuary\t1\t2014\t24.099999999999998\tnormal\nBang Khae/Bang Phai\tApril\t4\t2014\t4.41\tnormal\nNong Chok/Khok Faet\tFebruary\t2\t2014\t16.52\tnormal\nKhlong Toei/Khlong Toei\tFebruary\t2\t2014\t2.8\tnormal\nKhlong Sam Wa/Sam Wa Tawan Tok\tMay\t5\t2014\t91.25\tupper bound\nHuai Khwang/Bang Kapi\tJanuary\t1\t2014\t3.6999999999999997\tnormal\nLat Krabang/Lam Pla Thio\tMarch\t3\t2014\t24.38\tnormal\nBueng Kum/Khlong Kum\tMarch\t3\t2014\t12.540000000000001\tnormal\nNong Chok/Krathum Rai\tApril\t4\t2014\t12.76\tnormal\nPhaya Thai/Sam Sen Nai\tJanuary\t1\t2014\t11.120000000000001\tnormal\nKhlong Sam Wa/Sam Wa Tawan Tok\tApril\t4\t2014\t5.64\tnormal\nHuai Khwang/Bang Kapi\tMarch\t3\t2014\t28.910000000000004\tnormal\nBueng Kum/Khlong Kum\tFebruary\t2\t2014\t11.6\tnormal\nBang Khen/Tha Raeng\tApril\t4\t2014\t10.050000000000002\tnormal\nKhlong Toei/Khlong Toei\tApril\t4\t2014\t1.3\tnormal\nPrawet/Nong Bon\tApril\t4\t2014\t14.629999999999997\tnormal\nNong Chok/Khlong Sip Song\tJanuary\t1\t2014\t10.64\tnormal\nKhlong Toei/Khlong Toei\tDecember\t12\t2014\t0.0\tnormal\nBang Khun Thian/Samae Dam\tMay\t5\t2014\t96.8\tupper bound\nBueng Kum/Khlong Kum\tMay\t5\t2014\t18.6\tnormal\nKhlong Sam Wa/Sam Wa Tawan Tok\tFebruary\t2\t2014\t15.44\tnormal\nPhaya Thai/Sam Sen Nai\tApril\t4\t2014\t7.359999999999999\tnormal\nBang Khae/Bang Phai\tFebruary\t2\t2014\t5.59\tnormal\nNong Chok/Krathum Rai\tJanuary\t1\t2014\t15.510000000000002\tnormal\nPhaya Thai/Sam Sen Nai\tMay\t5\t2014\t53.0\tupper bound\nLat Krabang/Lam Pla Thio\tJanuary\t1\t2014\t30.92\tnormal\nSaphan Sung/Saphan Sung\tJanuary\t1\t2014\t21.86\tnormal\nBang Bon/Bang Bon\tJanuary\t1\t2014\t9.57\tnormal\nMin Buri/Saen Saep\tJanuary\t1\t2014\t8.17\tnormal\nNong Chok/Khlong Sip Song\tMarch\t3\t2014\t12.41\tnormal\nLat Krabang/Khum Thong\tJanuary\t1\t2014\t12.3\tnormal\nBang Khun Thian/Samae Dam\tMarch\t3\t2014\t23.66\tnormal\nLat Krabang/Lam Pla Thio\tFebruary\t2\t2014\t31.970000000000002\tnormal\nMin Buri/Saen Saep\tFebruary\t2\t2014\t20.33\tnormal\nBang Khen/Tha Raeng\tFebruary\t2\t2014\t5.16\tnormal\nBang Khun Thian/Tha Kham\tMarch\t3\t2014\t5.92\tnormal\nPrawet/Nong Bon\tFebruary\t2\t2014\t20.0\tnormal\nKhlong Sam Wa/Sam Wa Tawan Ok\tMarch\t3\t2014\t16.88\tnormal\nNong Chok/Khlong Sip Song\tApril\t4\t2014\t14.66\tnormal\nKhlong Toei/Khlong Toei\tJanuary\t1\t2014\t0.0\tnormal\nNong Chok/Lam Phak Chi\tFebruary\t2\t2014\t18.560000000000002\tnormal\nMin Buri/Saen Saep\tMay\t5\t2014\t33.45\tnormal\nNong Chok/Khok Faet\tMay\t5\t2014\t0.83\tnormal\nBang Khen/Tha Raeng\tJanuary\t1\t2014\t1.89\tnormal\nNong Chok/Krathum Rai\tMarch\t3\t2014\t2.25\tnormal\nKhlong Toei/Khlong Toei\tNovember\t11\t2014\t57.580000000000005\tupper bound\nSaphan Sung/Saphan Sung\tMay\t5\t2014\t40.63\tnormal\nLat Krabang/Khum Thong\tApril\t4\t2014\t8.02\tnormal\nSaphan Sung/Saphan Sung\tMarch\t3\t2014\t21.35\tnormal\nPrawet/Nong Bon\tMay\t5\t2014\t80.8\tupper bound\nDon Mueang/Sanam Bin\tFebruary\t2\t2014\t0.0\tnormal\nLak Si/Thung Song Hong\tApril\t4\t2014\t1.91\tnormal\nKhlong Toei/Khlong Toei\tJuly\t7\t2014\t164.16\tupper bound\nBang Khun Thian/Samae Dam\tFebruary\t2\t2014\t18.759999999999998\tnormal\nKhlong Sam Wa/Sam Wa Tawan Ok\tFebruary\t2\t2014\t15.720000000000002\tnormal\nBang Khun Thian/Samae Dam\tApril\t4\t2014\t21.430000000000003\tnormal\nNong Chok/Khu Fang Nuea\tMay\t5\t2014\t84.03\tupper bound\nBang Bon/Bang Bon\tFebruary\t2\t2014\t36.190000000000005\tnormal\nLak Si/Thung Song Hong\tFebruary\t2\t2014\t12.719999999999999\tnormal\nDon Mueang/Sanam Bin\tMay\t5\t2014\t13.2\tnormal\nPrawet/Nong Bon\tJanuary\t1\t2014\t1.49\tnormal\n"},{"type":"TEXT","data":"\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=433","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=434","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=435","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=436","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=437","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=438","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=439","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=440"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1603634178174_-1976633791","id":"20201025-135618_251945645","dateCreated":"2020-10-25T13:56:18+0000","dateStarted":"2020-11-07T06:08:27+0000","dateFinished":"2020-11-07T06:08:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26629"},{"title":"5.2) Outlier Detection - Water level","text":"%pyspark\nfrom pyspark.sql.functions import col\n\ninYearDF = waterLevelFinalDF.select(\"Station\" ,(((col(\"1\")+col(\"2\")+col(\"3\")+col(\"4\")+col(\"5\")+col(\"6\")+col(\"7\")+col(\"8\")+col(\"9\")+col(\"10\")+col(\"11\")+col(\"12\"))/12)).alias(\"inYearAverage\"))\ninYearStatisticDF=inYearDF.select(\"inYearAverage\").summary(\"min\", \"max\", \"25%\", \"75%\", \"mean\", \"stddev\")\nminInYear = float(inYearStatisticDF.collect()[0][1])\nmaxInYear = float(inYearStatisticDF.collect()[1][1])\nq1InYear = float(inYearStatisticDF.collect()[2][1])\nq3InYear = float(inYearStatisticDF.collect()[3][1])\nmeanInYear = float(inYearStatisticDF.collect()[4][1])\nsdInYear = float(inYearStatisticDF.collect()[5][1])\ninYearStatisticDF.show()\n\niqrInYear = q3InYear-q1InYear\nupperBInYear = q3InYear+(1.5*iqrInYear)\nlowerBInYear = q1InYear-(1.5*iqrInYear)\nprint \"IQR: {}\".format(iqrInYear)\nprint \"Upper Bound: {} / Lower Bound: {}\".format(upperBInYear, lowerBInYear)\n\ndef checkBoundaryInYear(inYear):\n    if inYear > upperB: \n        return 'upper bound'\n    elif inYear < lowerB:\n        return 'lower bound'\n    else :\n        return 'normal'\n\ncheckBoundaryFunc = F.udf(checkBoundaryInYear, StringType())\noutlierInYearDF = inYearDF.withColumn(\"Outlier\", checkBoundaryFunc(\"inYearAverage\"))\noutlierInYearDF.show()","user":"anonymous","dateUpdated":"2020-11-07T07:11:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"1":"string","2":"string","3":"string","4":"string","5":"string","6":"string","7":"string","8":"string","9":"string","10":"string","11":"string","12":"string","Station":"string","allMonths":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Station":"string","inYear":"string","Outlier":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------------------+\n|summary|       inYearAverage|\n+-------+--------------------+\n|    min|-0.21126636949209213|\n|    max|   1.048509819739572|\n|    25%| 0.08805941624708387|\n|    75%| 0.38065521660052815|\n|   mean| 0.30638183549919973|\n| stddev|  0.3730676076063795|\n+-------+--------------------+\n\nIQR: 0.292595800353\nUpper Bound: 0.819548917131 / Lower Bound: -0.350834284283\n+-------+--------------------+-------+\n|Station|       inYearAverage|Outlier|\n+-------+--------------------+-------+\n| BKK001| 0.08805941624708387| normal|\n| BKK003|  0.6022614874018596| normal|\n| BKK004| 0.38065521660052815| normal|\n| BKK005|  0.2300304895068841| normal|\n| BKK008|-0.07427119291190218| normal|\n| BKK009|-0.21126636949209213| normal|\n| BKK020|  0.3493662443285259| normal|\n| BKK021|   1.048509819739572| normal|\n| CPY015|  0.3440914080723385| normal|\n+-------+--------------------+-------+\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=482","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=483","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=484","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=485","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=486","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=487","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=488"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604728848785_2142310530","id":"20201107-060048_938301864","dateCreated":"2020-11-07T06:00:48+0000","dateStarted":"2020-11-07T07:11:51+0000","dateFinished":"2020-11-07T07:15:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26630"},{"text":"%pyspark\nstationDF = spark.createDataFrame(\n    [\n        (\"BKK001\", [\"45inYearDF50004\", \"4550005\", \"4550006\", \"4550020\"]),\n        (\"BKK004\", [\"4550007\"]),\n        (\"BKK005\", [\"4550021\", \"4550024\", \"4550025\", \"4550026\"]),\n        (\"BKK008\", [\"4550003\", \"4550017\", \"4550018\", \"4550022\", \"4550027\"]),\n        (\"BKK009\", [\"4550002\", \"4550009\", \"4550012\", \"4550013\", \"4550014\", \"4550016\", \"4550019\", \"4550023\"]),\n        (\"BKK021\", [\"4550001\", \"4550008\", \"4550010\", \"4550011\"]),\n        (\"CPY015\", [\"4550015\", \"4550028\"])\n    ],\n    [\"station\", \"areas\"]\n)\n\ndef getStation(areaCode):\n    result = \"NULL\"\n    for row in stationDF.rdd.collect():\n        areas = row[\"areas\"]\n        if areaCode in areas:\n            result = row[\"station\"]\n    return result\n\nassert \"BKK001\" == getStation(\"4550004\")\nassert \"BKK021\" == getStation(\"4550008\")\nassert \"CPY015\" == getStation(\"4550028\")","user":"anonymous","dateUpdated":"2020-11-07T07:05:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=441","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=442","http://hadoop-cluster-2020-msc-m.us-central1-f.c.meta-plateau-287204.internal:4040/jobs/job?id=443"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1604126839422_418802832","id":"20201031-064719_143208149","dateCreated":"2020-10-31T06:47:19+0000","dateStarted":"2020-11-07T06:08:43+0000","dateFinished":"2020-11-07T06:08:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26631"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-11-07T06:08:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1604222799407_-1613039082","id":"20201101-092639_1103024339","dateCreated":"2020-11-01T09:26:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26632"}],"name":"flooding_project","id":"2FQA9YR6K","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}